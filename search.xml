<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Next主题安装配置</title>
    <url>/2020/04/28/Hexo+Next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>之前一直用wordpress，但是对于我这种轻度使用者来说wordpress过于臃肿和复杂，然后发现了Hexo,就被这种简洁的风格所吸引，正式开始使用Hexo。</p>
<a id="more"></a>

<h4><span id="安装hexo">安装Hexo</span></h4><ol>
<li><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgit-scm.com%2Fdownload%2Fwin" target="_blank" rel="noopener">安装git</a></p>
</li>
<li><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fnodejs.org%2Fen%2F" target="_blank" rel="noopener">安装nodejs</a></p>
</li>
<li><p>安装Hexo,在git命令行里输入一下命令安装:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">cd 你的文件夹</span><br><span class="line">hexo init hexo 初始化hexo文件夹，不存在时会自动创建</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>到这里hexo就已经安装完成,运行本地服务器。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>然后可以通过127.0.0.1:4000进行访问。</p>
<h4><span id="使用next主题">使用Next主题</span></h4><p>Hexo内置的主题过于简洁，并且功能也太少。推荐使用<a href="https://theme-next.org/next-7-7-2-released/" target="_blank" rel="noopener">Next主题</a>。</p>
<ol>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd hexo #进入hexo文件夹</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置主配置文件(根目录下的_config.yml)</p>
<ul>
<li><p>配置站点名称，作者，语言等信息。如图：<img src="https://cqep.net:88/s/fLcP2ZD8WBxyxPn/preview" alt></p>
</li>
<li><p>配置主页显示文章数</p>
<p>per_page为主页文章数，这里设置为1</p>
<p>order_by为排序方式，设置为时间排序</p>
<p><img src="https://cqep.net:88/s/8JNLz4C6tj6z37R/preview" alt></p>
</li>
</ul>
</li>
<li><p>配置主题配置文件（主题下的_config.yml）</p>
<ul>
<li><p>设置风格，我这里选择的是Mist</p>
<p><img src="https://cqep.net:88/s/CYodMK5QCALAPPM/preview" alt></p>
</li>
<li><p>增加标签和分类栏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure>

<p>然后编辑tags文件夹下的index.md文件，categories一样操作。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2017-07-10 16:36:26</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>增加本地搜索</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>编辑 主配置文件，新增以下内容到任意位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure>

<p>编辑 主题配置文件，启用本地搜索功能：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除页脚由。。。q强力驱动,注释掉这一句,如图:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;powered-by&quot;&gt;</span><br><span class="line">    &#123;%- set next_site &#x3D; &#39;https:&#x2F;&#x2F;theme-next.org&#39; %&#125;</span><br><span class="line">    &#123;%- if theme.scheme !&#x3D;&#x3D; &#39;Gemini&#39; %&#125;</span><br><span class="line">      &#123;%- set next_site &#x3D; &#39;https:&#x2F;&#x2F;&#39; + theme.scheme | lower + &#39;.theme-next.org&#39; %&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">    &#123;&#123;- __(&#39;footer.powered&#39;, next_url(&#39;https:&#x2F;&#x2F;hexo.io&#39;, &#39;Hexo&#39;, &#123;class: &#39;theme-link&#39;&#125;) + &#39; &amp; &#39; + next_url(next_site, &#39;NexT.&#39; + theme.scheme, &#123;class: &#39;theme-link&#39;&#125;)) &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cqep.net:88/s/LEDoGDobopntB2d/preview" alt></p>
</li>
<li><p>统计访问人数：</p>
<p><img src="https://cqep.net:88/s/bkHtTsJTfkRkYda/preview" alt></p>
<p>目前数据不准确，不知道部署到网站会不会这样。</p>
</li>
<li><p>添加几何背景效果</p>
<p>进入next主题文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>git拉取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-canvas-nest source&#x2F;lib&#x2F;canvas-nest</span><br></pre></td></tr></table></figure>
</li>
<li><p>写入next配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &#39;0,0,255&#39; # RGB values, use &#39;,&#39; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<h4><span id="连接到github">连接到github</span></h4><p>仓库名称必须为 name.github.io</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;HappyClint&#x2F;happyclint.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>python生成器的再学习</title>
    <url>/2020/04/28/python%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E5%86%8D%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>普通的斐波拉契函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def fib(max):</span><br><span class="line">    n, a, b &#x3D; 0, 0, 1</span><br><span class="line">    while n &lt; max:</span><br><span class="line">        print b</span><br><span class="line">        a, b &#x3D; b, a + b</span><br><span class="line">        n &#x3D; n + 1</span><br><span class="line">    return &#39;done&#39;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>改成生成器generator形式只需将print改为yield.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br></pre></td></tr></table></figure>

<p>然后输出方面，可以直接next进行输出，如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = fib(<span class="number">10</span>)</span><br><span class="line">next(f)</span><br><span class="line">next(f)</span><br></pre></td></tr></table></figure>

<p>或者使用for循环：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = fib(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> f :</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure>

<h4><span id="生产者消费者的协程解法">生产者消费者的协程解法</span></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">()</span>:</span></span><br><span class="line">    r = <span class="string">''</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        n = <span class="keyword">yield</span> r</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> n:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        print(<span class="string">'[CONSUMER] Consuming %s...'</span> % n)</span><br><span class="line">        r = <span class="string">'200 OK'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">produce</span><span class="params">(c)</span>:</span></span><br><span class="line">    c.send(<span class="literal">None</span>)<span class="comment">#相当于next(),必须先执行</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; <span class="number">5</span>:</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">        print(<span class="string">'[PRODUCER] Producing %s...'</span> % n)</span><br><span class="line">        r = c.send(n)<span class="comment">#将N的值传到consumer的n值，并将r值回传</span></span><br><span class="line">        print(<span class="string">'[PRODUCER] Consumer return: %s'</span> % r)</span><br><span class="line">    c.close()</span><br><span class="line"></span><br><span class="line">c = consumer()</span><br><span class="line">produce(c)</span><br></pre></td></tr></table></figure>

<p><code>yield</code>在生成器中有中断的功能，可以传出值，也可以从函数外部接收值</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2020/04/28/Git/</url>
    <content><![CDATA[<h4><span id="git是什么">git是什么</span></h4><p>git是分布式版本控制系统，简单来说就是可以记录你的每一次更改。</p>
<ul>
<li>集中式控制系统 有服务器，所有用户的资料需要从服务器下载，修改完后再上传。如cvs,svn,<strong>vss</strong>(正在用)</li>
<li>分布式控制系统 每个用户手中都有完整的资料，可以通过服务器进行分享改动，没有服务器也可以正常运行。</li>
</ul>
<a id="more"></a>

<h4><span id="git安装">git安装</span></h4><p><a href="https://git-scm.com/download/" target="_blank" rel="noopener">下载地址</a>,配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>

<h4><span id="git使用">git使用</span></h4><ul>
<li>在文件夹下输入<code>git init</code>创建git仓库</li>
<li>git add file 添加修改</li>
<li>git commit -m ‘说明’ 进行提交</li>
<li>git diff 查看文件的更改</li>
</ul>
<h4><span id="git管理修改">git管理修改</span></h4><ul>
<li>git reset –head HEAD^上一个版本</li>
<li>git reset -head id 指定版本</li>
<li>git reflog 操作日志  可以找到ID 并回退到之后版本。</li>
</ul>
<h4><span id="撤销修改">撤销修改</span></h4><ul>
<li><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD</code>，就回到了场景1，第二步按场景1操作。</p>
</li>
</ul>
<h4><span id="删除">删除</span></h4><ul>
<li>git rm 文件 移除文件 然后提交</li>
</ul>
<h4><span id="添加远程仓库">添加远程仓库</span></h4><p>生成公钥和私钥，将公钥传到github</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure>

<h4><span id="连接到远程仓库">连接到远程仓库</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一次运行</span><br><span class="line">git remote add origin git@server-name:path&#x2F;repo-name.git</span><br><span class="line">git push -u origin master</span><br><span class="line">#以后同步</span><br><span class="line">git push origin master</span><br><span class="line">#删除远程连接</span><br><span class="line">git remote origin</span><br></pre></td></tr></table></figure>

<h4><span id="git分支">git分支</span></h4><ul>
<li><p>查看分支：<code>git branch</code></p>
<p>创建分支：<code>git branch</code></p>
<p>切换分支：<code>git checkout</code>或者<code>git switch</code></p>
<p>创建+切换分支：<code>git checkout -b</code>或者<code>git switch -c</code></p>
<p>合并某分支到当前分支：<code>git merge</code></p>
<p>删除分支：<code>git branch</code></p>
<p>用<code>git log --graph</code>命令可以看到分支合并图。</p>
<p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>github</category>
      </categories>
  </entry>
  <entry>
    <title>wordpress搭建个人博客</title>
    <url>/2020/04/27/wordpress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>最近被封闭太无聊了，开始折腾些以前想折腾又没时间折腾的东西。折腾完之后发现可能对各网友有一定帮助，然后就有了这篇搭建个人博客。开始分享一些自己在折腾，和曾经折腾过的东西。</p>
<a id="more"></a>

<h4><span id="一-选择博客平台">一、选择博客平台</span></h4><p>看了下现在比较火的一些平台，比如简书、知乎、CSDN等等，个人感觉界面过于复杂，很不适合我这种小白上手，主要是复杂的界面看着自己也很心烦。然后就百度了一下找到了wordpress.com，界面我还挺喜欢，但是每月至少需要4块钱，觉得完全每月必要，正好之前买了华为云的云主机，干脆就自己搭建得了。</p>
<h4><span id="二-在华为云上安装wordpress">二、在华为云上安装wordpress</span></h4><p>1.安装docker</p>
<p>使用docker安装简单，并且随时可以启停，相当方便。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line">yum install docker-ce</span><br><span class="line"># 启动Docker</span><br><span class="line">systemctl start docker</span><br><span class="line">#测试运行 hello-world</span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>

<p>2.安装mysql</p>
<p>wordpress部署需要msql，这里同样用docker进行安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装，其中passwd是你root账户的密码</span><br><span class="line">docker run --name&#x3D;nextcloud_db -e MYSQL_ROOT_PASSWORD&#x3D;passwd -d mysql:5</span><br><span class="line"># 创建数据库</span><br><span class="line">docker exec -it nextcloud_db mysql -u root -p</span><br><span class="line">passwd: passwd</span><br><span class="line">mysql&gt; CREATE DATABASE wordpress;</span><br><span class="line">mysql&gt; exit;</span><br></pre></td></tr></table></figure>

<p>3.安装wordpress</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 82为你对外的服务器端口，nextcloud_db就是我们创建的mysql容器在wordpress里可以通过db访问</span><br><span class="line">docker run --name my-wordpress --link nextcloud_db:db -p 82:80 -d wordpress</span><br></pre></td></tr></table></figure>

<p>4.设置wordpress</p>
<ul>
<li><p>选择语言，中文</p>
<p><img src="https://cqep.net:88/s/EgAQNeMNjBsikNF/preview" alt="img"></p>
</li>
<li><p>配置数据库信息，passwd为你的数据库密码</p>
<p><img src="https://cqep.net:88/s/ScDarbNXRPKRXYq/preview" alt="img"></p>
</li>
</ul>
<h4><span id="三-wordpress优化">三、wordpress优化</span></h4><ul>
<li><p>最后根据个人喜好进行wordpress页面的一些优化，选择主题，安装插件等。</p>
<p><img src="https://cqep.net:88/s/YFz7YpoBS3qrCd5/preview" alt="img"></p>
</li>
<li><p>$_SERVER[‘HTTPS’] = ‘on’;</p>
</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>多进程、多线程、协程解压文件速度对比</title>
    <url>/2020/04/28/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E3%80%81%E5%A4%9A%E7%BA%BF%E7%A8%8B%E3%80%81%E5%8D%8F%E7%A8%8B%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6%E9%80%9F%E5%BA%A6%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p>测试python单线程、多进程、多线程、协程文件写入性能，在文件中写入50万行数据，写入10次，查看性能占用和耗时情况。</p>
<a id="more"></a>

<h4><span id="单线程版">单线程版</span></h4><p>两种数字补全0的方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(str(x).zfill(2))</span><br><span class="line">print(&#39;%02d&#39;%x)</span><br></pre></td></tr></table></figure>

<p><img src="https://cqep.net:88/s/bg2pb34rSL9P7xz/preview" alt></p>
<p>文件读写</p>
<table>
<thead>
<tr>
<th>访问模式</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>r (read)</td>
<td>只读模式,不能写（文件必须存在，不存在会报错）</td>
</tr>
<tr>
<td>w (write)</td>
<td>只写模式,不能读（文件存在则会被覆盖内容（要千万注意），文件不存在则创建）</td>
</tr>
<tr>
<td>a (append)</td>
<td>追加模式,不能读</td>
</tr>
<tr>
<td>r+</td>
<td>读写模式</td>
</tr>
<tr>
<td>w+</td>
<td>写读模式</td>
</tr>
<tr>
<td>a+</td>
<td>追加读模式</td>
</tr>
<tr>
<td>rb</td>
<td>二进制读模式</td>
</tr>
<tr>
<td>wb</td>
<td>二进制写模式</td>
</tr>
<tr>
<td>ab</td>
<td>二进制追加模式</td>
</tr>
<tr>
<td>rb+</td>
<td>二进制读写模式</td>
</tr>
<tr>
<td>wb+</td>
<td>二进制写读模式</td>
</tr>
<tr>
<td>ab+</td>
<td>二进制追加读模式</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>开始使用ubuntu</title>
    <url>/2020/04/27/%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8ubuntu/</url>
    <content><![CDATA[<h2><span id="1环境准备">1.环境准备</span></h2><p>安装ubuntu,安装常用软件，配置网络，修复问题等</p>
<h3><span id="11安装ubuntu">1.1安装ubuntu</span></h3><p>推荐安装ubuntu19.04，安装时不选择更新。 设置启动选择时间为0</p>
<p><code>sudo vim /boot/grub/grub.cfg</code> 设置timeout=30 =&gt; 0</p>
<a id="more"></a>

<h3><span id="12-安装常用软件">1.2 安装常用软件</span></h3><h4><span id="a安装搜狗输入法">a.安装搜狗输入法</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install fcitx-table-wbpy fcitx-config-gtk</span><br><span class="line">im-config -n fcitx</span><br><span class="line">sudo dpkg -i sogoupinyin_2.2.0.0108_amd64.deb</span><br><span class="line">sudo apt-get install -f</span><br><span class="line">sudo dpkg -i sogoupinyin_2.2.0.0108_amd64.deb</span><br></pre></td></tr></table></figure>

<p>解决输入法输入英语字符变宽问题，解决如下：将全改为半即可。</p>
<p><img src="https://cqep.net:88/s/7HBPbkFSjQkMxs2/preview" alt></p>
<h4><span id="b-优化桌面">b .优化桌面</span></h4><p>安装优化软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-tweak-tool</span><br></pre></td></tr></table></figure>

<p>使用firefox访问 <code>https://extensions.gnome.org/</code> 根据提示安装插件，然后安装两个插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dash to dock</span><br><span class="line">hide top bar</span><br></pre></td></tr></table></figure>

<h4><span id="c-user-themes设置">c. user themes设置</span></h4><p>在优化里设置user themes 开启 <strong>安装shell Flat Remix</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:daniruiz&#x2F;flat-remix</span><br><span class="line">sudo apt-get install flat-remix</span><br><span class="line">sudo apt-get install flat-remix-gnome</span><br></pre></td></tr></table></figure>

<p><strong>安装图标</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:papirus&#x2F;papirus</span><br><span class="line">sudo apt install papirus-icon-theme</span><br></pre></td></tr></table></figure>

<p>最后在优化中设置主题和图标</p>
<h4><span id="d-安装wps">d. 安装wps</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp  * &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;win10</span><br><span class="line"># 生成字体索引信息</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line"># 更新字体缓存</span><br><span class="line">sudo fc-cache</span><br><span class="line">sudo dpkg -i wps-office_11.1.0.8372_amd64.deb</span><br><span class="line">sudo mv wps_symbol_fonts &#x2F;usr&#x2F;share&#x2F;fonts&#x2F; #移动到fonts文件夹</span><br></pre></td></tr></table></figure>

<h4><span id="e安装视频播放器vlc-截图软件shutter">e.安装视频播放器vlc、截图软件shutter</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install vlc</span><br><span class="line">sudo apt install shutter</span><br></pre></td></tr></table></figure>

<h3><span id="3升级安装游戏下载软件">3.升级安装游戏，下载软件</span></h3><h4><span id="安装ugetaria2">安装uget+aria2</span></h4><p>1.安装aira2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install aria2</span><br></pre></td></tr></table></figure>

<p>2.安装及配置uget</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install uget</span><br></pre></td></tr></table></figure>

<p>3.chrome安装插件uGet Integration 4.系统也要安装uget-integrator</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:uget-team&#x2F;ppa</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install uget-integrator</span><br></pre></td></tr></table></figure>

<h4><span id="4其他">4.其他</span></h4><ul>
<li><p>墙</p>
<p>这里使用v2ray,和图形化界面Qv2ray。见nextcloud。</p>
<p>ufw地址，<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p>
</li>
<li><p>系统备份</p>
<p>ubuntu系统镜像软件 systemback，<a href="https://ywnz.com/linuxjc/3877.html" target="_blank" rel="noopener">https://ywnz.com/linuxjc/3877.html</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb http:&#x2F;&#x2F;ppa.launchpad.net&#x2F;nemh&#x2F;systemback&#x2F;ubuntu xenial main&quot;</span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys </span><br><span class="line">382003C2C8B7B4AB813E915B14E4942973C62A1B</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install systemback</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装picgo</p>
<p>下载最新版本<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">picgo</a>,安装nodejs和npm、xclip</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install npm</span><br><span class="line">sudo apt install xclip</span><br></pre></td></tr></table></figure>
</li>
<li><p>开机启动</p>
<p>gnome-session-properties,配置开机启动项目</p>
<p><img src="https://cqep.net:88/s/bjbdQAon7irfsGq/preview" alt></p>
<p>ubuntu做windows镜像</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:nilarimogard&#x2F;webupd8</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get woeusb</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
</search>
